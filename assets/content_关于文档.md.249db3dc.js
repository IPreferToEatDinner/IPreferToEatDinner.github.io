import{_ as e,o as t,c as o,U as a}from"./chunks/framework.76b79cb5.js";const m=JSON.parse('{"title":"关于文档","description":"","frontmatter":{},"headers":[],"relativePath":"content/关于文档.md","filePath":"content/关于文档.md","lastUpdated":1685003054000}'),r={name:"content/关于文档.md"},i=a('<h1 id="关于文档" tabindex="-1">关于文档 <a class="header-anchor" href="#关于文档" aria-label="Permalink to &quot;关于文档&quot;">​</a></h1><h2 id="新手你好" tabindex="-1">新手你好 <a class="header-anchor" href="#新手你好" aria-label="Permalink to &quot;新手你好&quot;">​</a></h2><p>欢迎来到《C++从菜鸟到入门》文档站，我将带着你一步一步地走过学习这门语言必然要走过的艰难又迷惑的入门道路</p><p>当然，这个站点是完全免费的，因为互联网精神其一就是 <strong>开源</strong> ，随着学习，你会发现这个世界有很多教程，他们都秉持着免费开源的精神，为现代付费互联网保留最初的热忱。因此，在教程的后部分，我会为你提供一些和编程有关的资源网站，你将在那里学到这里所没有的知识</p><h2 id="谁适合看这篇文档" tabindex="-1">谁适合看这篇文档 <a class="header-anchor" href="#谁适合看这篇文档" aria-label="Permalink to &quot;谁适合看这篇文档&quot;">​</a></h2><p><strong>为了大学的 C++ 课程的考试</strong> ：这里会给你提供有关考试的所有资源，以及比考试涉及到的知识更加深入的内容</p><p><strong>有基本 C 语言经验的有志青年</strong> ：这里会为你提供必要的指导，让你更加平稳的过渡到 C++</p><p><strong>没有 C 语言经验但是有其他语言经验的伙伴</strong> ：鉴于你已经使用过其他语言，因此也算是有 C 语言的基础，毕竟编程的本质并不是什么语言，而是什么思想，不出意料的话你会较快的上手这门语言</p><h2 id="这篇文档是如何组织的" tabindex="-1">这篇文档是如何组织的 <a class="header-anchor" href="#这篇文档是如何组织的" aria-label="Permalink to &quot;这篇文档是如何组织的&quot;">​</a></h2><p>本文档并不是一篇一篇组织起来渐进的文档写作风格，而是按照主题进行文档归类和整理，你可以自由自在地选择想要学习的知识区块。但是每个区块的知识一开始你很可能只能看懂前面一二篇文档，之后的就看不懂了，没关系，看不懂就跳过，等你把其他区块的知识搞懂之后返回来看此处的知识内容，又会有重新的理解</p><h2 id="我该去哪里发表评论" tabindex="-1">我该去哪里发表评论 <a class="header-anchor" href="#我该去哪里发表评论" aria-label="Permalink to &quot;我该去哪里发表评论&quot;">​</a></h2><p>项目刚刚启动，并没有完善的评论区系统，随着项目的一步步开发和完善，我会将文档公开在 Github ，大家一起协作完成这个项目的所有内容</p><h2 id="文档写作标注" tabindex="-1">文档写作标注 <a class="header-anchor" href="#文档写作标注" aria-label="Permalink to &quot;文档写作标注&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这是提示性文字，一般为补充知识点</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>这是警告性文字，用于告知开发者某些必要的知识点</p></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>这是警告性文字，提示开发者最好不要以某种方式编码，或此处存在潜在的编码风险</p></div><h2 id="网页技术栈" tabindex="-1">网页技术栈 <a class="header-anchor" href="#网页技术栈" aria-label="Permalink to &quot;网页技术栈&quot;">​</a></h2><p>本站使用 <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">Vitepress</a> <a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue</a> 打造，以期获得良好的阅读体验</p><h2 id="编程格言" tabindex="-1">编程格言 <a class="header-anchor" href="#编程格言" aria-label="Permalink to &quot;编程格言&quot;">​</a></h2><blockquote><p>All problems in computer science can be solved by another level of indirection</p><p>计算机科学中的所有问题都可以通过增加一个间接层来解决</p></blockquote><blockquote><p>Programming is like sex. One mistake and you have to support it for the rest of your life</p><p>编程就像性，一个错误必须终身承受</p></blockquote><blockquote><p>Simplicity is prerequisite for reliability</p><p>简单是可靠的前提</p></blockquote><blockquote><p>It&#39;s harder to read code than to write it</p><p>读代码比写代码困难</p></blockquote><blockquote><p>Don&#39;t reapeat yourself. Every piece of knowledge must have a single, unambiguous, authoritative representation within a system</p><p>不要重复！在一个系统中，每条知识必须唯一、清晰、权威的表达</p></blockquote><blockquote><p>There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors</p><p>计算机科学两件最难的事情：缓存失效，命名和差一错误</p></blockquote><blockquote><p>It takes 3 times the effort to find and fix bugs in system test than when done by the developer. It takes 10 times the effort to find and fix bugs in the field than when done in system test. Therefore insist on unit tests by the developer</p><p>系统测试阶段发现和修复bug需要付出的努力是开发者自己解决的3倍。而上线后付出的努力又是系统测试阶段的10倍，因此，开发者一定要自己做单元测试</p></blockquote><blockquote><p>Good code is its own best documentation. As you&#39;re about to add a comment, ask yourself, &#39;How can I improve the code so that this comment isn&#39;t needed?&#39;</p><p>好的代码有自说明性，当你想添加一条注释时，问下自己“ 我怎么能改进代码从而省略这个注释？”</p></blockquote><p>送给你们几句格言，这或许对当下的自己没有什么用处，但是总有一天，你学完了我提供的所有知识，转而去其他地方求索，在不断的 Coding 和 Review 下成为了一个合格的 C++ 开发者之后，甚至不再使用 C++ ，而是 Java、JavaScript、Python、C、Lua、Go 之类语言后，偶然间回到了这个小站，再看这几句话，一定会有不同的想法，甚至会对编程哲学有新的见解</p>',28),s=[i];function n(l,c,p,h,d,u){return t(),o("div",null,s)}const f=e(r,[["render",n]]);export{m as __pageData,f as default};
